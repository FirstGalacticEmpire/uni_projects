Unsupervised learning is a type of machine learning in which the algorithm is not provided with any pre-assigned labels or scores for the training data.[1][2] As a result, unsupervised learning algorithms must first self-discover any naturally occurring patterns in that training data set. Common examples include clustering, where the algorithm automatically groups its training examples into categories with similar features, and principal component analysis, where the algorithm finds ways to compress the training data set by identifying which features are most useful for discriminating between different training examples, and discarding the rest. This contrasts with supervised learning in which the training data include pre-assigned category labels (often by a human, or from the output of non-learning classification algorithm).[3] Other intermediate levels in the supervision spectrum include reinforcement learning, where only numerical scores are available for each training example instead of detailed tags, and semi-supervised learning where only a portion of the training data have been tagged.

Advantages of unsupervised learning include a minimal workload to prepare and audit the training set, in contrast to supervised learning techniques where a considerable amount of expert human labor is required to assign and verify the initial tags, and greater freedom to identify and exploit previously undetected patterns that may not have been noticed by the "experts". This often comes at the cost of unsupervised techniques requiring a greater amount of training data and converging more slowly to acceptable performance, increased computational and storage requirements during the exploratory process, and potentially greater susceptibility to artifacts or anomalies in the training data that might be obviously irrelevant or recognized as erroneous by a human, but are assigned undue importance by the unsupervised learning algorithm.

Common families of algorithms used in unsupervised learning include: (1) clustering, (2) anomaly detection, (3) neural networks (note that not all neural networks are unsupervised; they can be trained by supervised, unsupervised, semi-supervised, or reinforcement methods), and (4) latent variable models.

One statistical approach for unsupervised learning is the method of moments.[7] In the method of moments, the unknown parameters of interest in the model are related to the moments of one or more random variables. These moments are empirically estimated from the available data samples and used to calculate the most likely value distributions for each parameter. The method of moments is shown to be effective in learning the parameters of latent variable models, where in addition to the observed variables available in the training and input data sets, a number of unobserved latent variables are also assumed to exist and to determine the categorization of each same. One practical example of latent variable models in machine learning is topic modeling, which is a statistical model for predicting the words (observed variables) in a document based on the topic (latent variable) of the document. The method of moments (tensor decomposition techniques) has been shown to consistently recover the parameters of a large class of latent variable models under certain assumptions.[8]

The expectation–maximization algorithm is another practical method for learning latent variable models. However, it can get stuck in local optima, and it is not guaranteed to converge to the true unknown parameters of the model. In contrast, using the method of moments, global convergence is guaranteed under some conditions.[8]

The next five subsections contain basic material.  More intermediate level materials follows it in Comparison of Networks, and Specific Networks.  Advanced materials have their own Wikipedia entries.

Traditionally, Supervised methods are used for recognition tasks and Unsupervised methods are used for generative tasks.  As progress marches onward, some tasks employ both methods, and some tasks swing from one method to another.  For example, image recognition started off as heavily supervised, but became hybrid by employing unsupervised pre-training, and then moved towards supervision again with the advent of dropout, relu, and adaptive learning rates.

During the learning phase, an unsupervised network tries to mimic the data it's given and uses the error in its mimicked output to correct itself (ie. correct its weights & biases). This resembles the mimicry behavior of children as they learn a language.  Sometimes the error is expressed as a low probability that the erroneous output occurs, or it might be express as an unstable high energy state in the network.

In contrast to supervised method's dominant use of Backpropagation, unsupervised methods employ various learning algorithms including:  Hopfield learning rule, Boltzmann learning rule, Contrastive Divergence, Wake Sleep, Variational Inference, Maximum A Posteriori, Gibbs Sampling, backpropagating the reconstruction error, or backpropagating the hidden state reparameterizations.  See the table below for more details.

In Boltzmann machines, Energy plays the role of the Cost function.  An energy function is a macroscopic measure of a network's state. This analogy with physics is inspired by Ludwig Boltzmann's analysis of a gas' macroscopic energy from the microscopic probabilities of particle motion p  eE/kT, where k is the Boltzmann constant and T is temperature. In the RBM network the relation is p = e−E / Z,[2] where p & E vary over every possible activation pattern and Z =  e -E(pattern). To be more precise, p(a) = e-E(a) / Z, where a is an activation pattern of all neurons (visible and hidden). Hence, early neural networks bear the name Boltzmann Machine. Paul Smolensky calls -E the Harmony. A network seeks low energy which is high Harmony.

This table shows connection diagrams of various unsupervised networks, the details of which will be given in the section Comparison of Network.  Of the networks bearing people's names, only Hopfield worked directly with neural networks.  Boltzmann and Helmholtz lived before the invention of artificial neural networks, but they did inspire the analytical methods that were used.

Here, we highlight some characteristics of each networks. Ferromagnetism inspired Hopfield networks, Boltzmann machines, and RBMs. A neuron correspond to an iron domain with binary magnetic moments Up and Down, and neural connections correspond to the domain's influence on each other. Symmetric connections enables a global energy formulation. During inference the network updates each state using the standard activation step function. Symmetric weights guarantees convergence to a stable activation pattern.

Hebbian Learning, ART, SOM
The classical example of unsupervised learning in the study of neural networks is Donald Hebb's principle, that is, neurons that fire together wire together.[9] In Hebbian learning, the connection is reinforced irrespective of an error, but is exclusively a function of the coincidence between action potentials between the two neurons.[10] A similar version that modifies synaptic weights takes into account the time between the action potentials (spike-timing-dependent plasticity or STDP). Hebbian Learning has been hypothesized to underlie a range of cognitive functions, such as pattern recognition and experiential learning.

Among neural network models, the self-organizing map (SOM) and adaptive resonance theory (ART) are commonly used in unsupervised learning algorithms. The SOM is a topographic organization in which nearby locations in the map represent inputs with similar properties. The ART model allows the number of clusters to vary with problem size and lets the user control the degree of similarity between members of the same clusters by means of a user-defined constant called the vigilance parameter. ART networks are used for many pattern recognition tasks, such as automatic target recognition and seismic signal processing.[11]
